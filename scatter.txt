import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from collections import Counter
from sklearn.feature_extraction.text import ENGLISH_STOP_WORDS

# Simulated data
df1_text = ["This is text from df1",
            "More text from df1",
            "Final text from df1"]

df2_text = ["Text from df2",
            "More from df2",
            "Final text"]

df3_text = ["Data from df3",
            "Additional df3 data",
            "Ending text for df3"]

# Tokenizing and Counting Frequency
def tokenize_and_count(text_data):
    words = ' '.join(text_data).lower().split()
    words = [word for word in words if word not in ENGLISH_STOP_WORDS]
    return Counter(words)

# Create frequency DataFrames
df1_freq = pd.DataFrame(tokenize_and_count(df1_text).items(), columns=['word', 'count']).sort_values('count', ascending=False)
df2_freq = pd.DataFrame(tokenize_and_count(df2_text).items(), columns=['word', 'count']).sort_values('count', ascending=False)
df3_freq = pd.DataFrame(tokenize_and_count(df3_text).items(), columns=['word', 'count']).sort_values('count', ascending=False)

# Merge and normalize the frequencies
merged_freq = pd.merge(pd.merge(df1_freq, df2_freq, on='word', how='outer', suffixes=('_df1', '_df2')), 
                       df3_freq.rename(columns={'count': 'count_df3'}), on='word', how='outer').fillna(0)
total = merged_freq.sum()
merged_freq['proportion_df1'] = merged_freq['count_df1'] / total['count_df1']
merged_freq['proportion_df2'] = merged_freq['count_df2'] / total['count_df2']
merged_freq['proportion_df3'] = merged_freq['count_df3'] / total['count_df3']

# Scatter Plot
fig, axes = plt.subplots(1, 2, figsize=(12, 6))

# Plot for df1 vs df2
axes[0].scatter(merged_freq['proportion_df1'], merged_freq['proportion_df2'], alpha=0.5, label='Words')
axes[0].plot([0, max(merged_freq['proportion_df1'])], [0, max(merged_freq['proportion_df1'])], 'k--')
axes[0].set_xscale('log')
axes[0].set_yscale('log')
axes[0].set_title('df1 vs df2')
axes[0].set_xlabel('Proportion in df1')
axes[0].set_ylabel('Proportion in df2')

# Plot for df1 vs df3
axes[1].scatter(merged_freq['proportion_df1'], merged_freq['proportion_df3'], alpha=0.5, label='Words')
axes[1].plot([0, max(merged_freq['proportion_df1'])], [0, max(merged_freq['proportion_df1'])], 'k--')
axes[1].set_xscale('log')
axes[1].set_yscale('log')
axes[1].set_title('df1 vs df3')
axes[1].set_xlabel('Proportion in df1')
axes[1].set_ylabel('Proportion in df3')

# Annotating points
for i, row in merged_freq.iterrows():
    if row['proportion_df1'] > 0.1 or row['proportion_df2'] > 0.1:
        axes[0].annotate(row['word'], (row['proportion_df1'], row['proportion_df2']), textcoords="offset points", xytext=(0,10), ha='center')
    if row['proportion_df1'] > 0.1 or row['proportion_df3'] > 0.1:
        axes[1].annotate(row['word'], (row['proportion_df1'], row['proportion_df3']), textcoords="offset points", xytext=(0,10), ha='center')

plt.tight_layout()
plt.show()
