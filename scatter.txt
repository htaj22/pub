import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from collections import Counter
from sklearn.feature_extraction.text import ENGLISH_STOP_WORDS

# Simulated data (you can replace this with your real datasets)
df1_text = ["This is text from df1",
            "More text from df1",
            "Final text from df1"]

df2_text = ["Text from df2",
            "More from df2",
            "Final text"]

df3_text = ["Data from df3",
            "Additional df3 data",
            "Ending text for df3"]

# Tokenizing and Counting Frequency
def tokenize_and_count(text_data):
    words = ' '.join(text_data).lower().split()
    words = [word for word in words if word not in ENGLISH_STOP_WORDS]
    return Counter(words)

# Create frequency DataFrames
df1_freq = pd.DataFrame(tokenize_and_count(df1_text).items(), columns=['word', 'df1'])
df2_freq = pd.DataFrame(tokenize_and_count(df2_text).items(), columns=['word', 'df2'])
df3_freq = pd.DataFrame(tokenize_and_count(df3_text).items(), columns=['word', 'df3'])

# Merging DataFrames
merged_freq = pd.merge(pd.merge(df1_freq, df2_freq, on='word', how='outer'), df3_freq, on='word', how='outer').fillna(0)

# Normalize the frequencies
total_df1 = merged_freq['df1'].sum()
total_df2 = merged_freq['df2'].sum()
total_df3 = merged_freq['df3'].sum()

merged_freq['df1'] = merged_freq['df1'] / total_df1
merged_freq['df2'] = merged_freq['df2'] / total_df2
merged_freq['df3'] = merged_freq['df3'] / total_df3

# Scatter Plots
fig, axes = plt.subplots(1, 2, figsize=(12, 6))

# First subplot comparing df1 and df2
axes[0].scatter(merged_freq['df1'], merged_freq['df2'], c='blue', alpha=0.5)
axes[0].set_xscale('log')
axes[0].set_yscale('log')
axes[0].set_title('df1 vs df2')
axes[0].set_xlabel('df1')
axes[0].set_ylabel('df2')
axes[0].plot([1e-5, 1e-1], [1e-5, 1e-1], 'k--')

# Second subplot comparing df1 and df3
axes[1].scatter(merged_freq['df1'], merged_freq['df3'], c='red', alpha=0.5)
axes[1].set_xscale('log')
axes[1].set_yscale('log')
axes[1].set_title('df1 vs df3')
axes[1].set_xlabel('df1')
axes[1].set_ylabel('df3')
axes[1].plot([1e-5, 1e-1], [1e-5, 1e-1], 'k--')

# Annotate a few points (for demonstration; ideally, you'd use some heuristic to decide which points to annotate)
for i, word in enumerate(merged_freq['word']):
    if i % 2 == 0:  # Annotating every 2nd point as an example
        for ax in axes:
            ax.annotate(word, (merged_freq['df1'][i], merged_freq['df2'][i]))

plt.tight_layout()
plt.show()
